---
#####
## This playbook is for installing the latest version of git from source. There are two possible ways to get the latest
## source code for git: download a tarball, or clone the source using git. 
## 
## 1. Install prerequisites, including 
##
## TODO:
##   - Investigate downloading tarball instead of dnf install & remove of git: worth it?
##   - git commands to check out the latest stable (or at least RC? Maybe grep branches, but ^(RC) ..?)
##   - Use vars in place of user home dir
# Prep git for install: Install prereqs,
#####

- name: Install prereq packages
  dnf:
    name: "{{ item }}"
    # TODO: with_file for dnf is deprecated; need to learn to do the style below
    #name: "{{ query('file', ['packages.txt']) }}"
    state: latest
  with_items:
    - "{{ git_prereq_packages }}"


- name: Symlink for docbook2texi (required on Fedora-based systems)
#  sudo ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi
  file:
    src: /usr/bin/db2x_docbook2texi
    dest: /usr/bin/docbook2x-texi
    state: link

## TODO: Can I short-circuit install/uninstall if git executable already exists?
#- name: DNF install of git, to clone repo
#  dnf:
#    name: git
#    state: latest

- name: Clone git repo
  git:
    repo: https://github.com/git/git.git
    dest: /opt/git
    version: "{{ git_version }}"

- name: git - make configure
  make:
    chdir: /opt/git
    target: configure

- name: Run configure script
  shell:
    cmd: "./configure --prefix=/usr"
    chdir: /opt/git

## TODO: In git docs, this is split into two commands:
## $ make all doc info
## $ sudo make install install-doc install-html install-info
- name: git - make remaining targets
  make:
    chdir: /opt/git
    target: "{{ item }} "
  with_items:
    - "all doc info"
    - "install install-doc install-html install-info"

# make configure
# ./configure --prefix=/usr
# make all doc info
# sudo make install install-doc install-html install-info

##
## BELOW HERE = SET UP THE BASH CONFIG FOR THE GIT INSTALL 
 
#- name: .bashrc config for git
#  hosts: localhost
#  connection: local
#  become: true

#  tasks:
- name: Git Bash Completion script downloaded
  get_url:
    url: "https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash"
    ## TODO: Genericize user! (passed in??)
    dest: /home/chmay/bin
    mode: 0755

- name: Git Prompt script downloaded
  get_url:
    url: "https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh"
    ## TODO: Genericize user! (passed in??)
    dest: /home/chmay/bin
    mode: 0755


- name: Add git to PATH
  lineinfile:
    path: /home/chmay/.bashrc
    line: "export PATH=${PATH}:/opt/git"

## TODO: lineinfile on .bashrc to source the above three scripts!

- name: Source git bash completion script from .bashrc
  lineinfile:
#        ## TODO: Genericize user! (passed in??)
    path: /home/chmay/.bashrc
    line: "source ~/bin/git-prompt.sh"

- name: Source git prompt script from .bashrc
  lineinfile:
#        ## TODO: Genericize user! (passed in??)
    path: /home/chmay/.bashrc
    line: "source ~/bin/git-prompt.sh"

- name: Add prompt_command contents to .bashrc
  blockinfile:
#        ## TODO: Genericize user! (passed in??)
    path: /home/chmay/.bashrc
    block: "{{ lookup('file', 'files/prompt_command.sh') }}"


- name: Remove DNF install of git
  dnf:
    name: git
    state: absent
